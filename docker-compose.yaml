services:
  web-django:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
        - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
        - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
    container_name: PictureMe
    restart: always
    ports:
      - 8000:8000
    command: bash -c "
      while ! mysqladmin ping -h db -u root -p$$MYSQL_ROOT_PASSWORD --silent; do
        echo 'Waiting for database...';
        sleep 1;
      done &&
      python manage.py makemigrations &&
      python manage.py migrate --no-input &&
      python manage.py collectstatic --noinput &&
      python superuser.py &&
      gunicorn PictureMe.wsgi:application -b 0.0.0.0:8000
      "
    #      python superuser.py &&
    volumes:
      - PictureMe1:/usr/src/PictureMe
      - PictureMe1_media:/usr/src/PictureMe/media
      - PictureMe1_static:/usr/src/PictureMe/static
    env_file:
      - ./.env
    environment:
      - ENV_FILE=.env
    healthcheck:
      test: ["CMD", "mysqladmin","ping", "-h", "localhost"]
      timeout: 120s
      retries: 20
    networks:
      - cloudflare_nas_network
      - nginx-proxy-manager_nginx-proxy
    depends_on:
      db:
        condition: service_healthy

  nginx-photo:
    build:
      context: nginx/.
    container_name: webserver
    restart: always
    volumes:
      - ./ssl:/ssl/
      - PictureMe1_media:/usr/src/PictureMe/media
      - PictureMe1_static:/usr/src/PictureMe/static
    ports:
      - 8088:8088
      - 442:442
    depends_on:
      - web-django
    networks:
      - cloudflare_nas_network
      - nginx-proxy-manager_nginx-proxy


  db:
    image: mysql:latest
    container_name: db_PictureMe
    restart: always
    env_file:
      - ./.env
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_PORT: ${MYSQL_PORT}
    ports:
      - 13666:3306
    volumes:
      - db_PictureMe:/var/lib/mysql
      - ./init-exporter.sql:/docker-entrypoint-initdb.d/init-exporter.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -u root -p$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 1000s
      retries: 60
    networks:
      - cloudflare_nas_network
      - nginx-proxy-manager_nginx-proxy

  static-server:
    build:
      context: nginx-static/.
    container_name: static-server
    restart: always
    volumes:
      - PictureMe1_static:/usr/src/PictureMe/static
      - PictureMe1_media:/usr/src/PictureMe/media
      - ./nginx-static/static-nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8079:79
    networks:
      - cloudflare_nas_network
      - nginx-proxy-manager_nginx-proxy

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - cloudflare_nas_network
      - nginx-proxy-manager_nginx-proxy

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 9091:3000
    env_file:
      - ./.env
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - cloudflare_nas_network
      - nginx-proxy-manager_nginx-proxy

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    ports:
      - 9113:9113
    command: -nginx.scrape-uri http://nginx-photo:8088/nginx_status
    depends_on:
    - nginx-photo
    networks:
      - cloudflare_nas_network
      - nginx-proxy-manager_nginx-proxy

  mysql-exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysql-exporter
    volumes:
    - ./my.cnf:/etc/my.cnf
    command: ["--config.my-cnf=/etc/my.cnf"]
    ports:
      - 9104:9104
    networks:
      - cloudflare_nas_network
      - nginx-proxy-manager_nginx-proxy
    depends_on:
      db:
        condition: service_healthy

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - 9100:9100
    networks:
      - cloudflare_nas_network
      - nginx-proxy-manager_nginx-proxy


volumes:
  PictureMe1:
  PictureMe1_media:
  PictureMe1_static:
  db_PictureMe:
  grafana-storage:

networks:
  cloudflare_nas_network:
    external: true
    name: cloudflare_nas_network
  nginx-proxy-manager_nginx-proxy:
    external: true
